from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from google_sheets import get_categories

main = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text="–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑‚òï")],
                                     [KeyboardButton(text="–ú–æ–∏ –∑–∞–∫–∞–∑—ãüìÉ")],
                                     [KeyboardButton(text='–û –∫–æ—Ñ–µ–π–Ω–µ‚ÑπÔ∏è')]])


def create_categories():
    categories = get_categories()
    builder = InlineKeyboardBuilder()
    for category in categories:
        builder.add(InlineKeyboardButton(text=category, callback_data=f"category_{category}"))
    builder.adjust(1)
    keyboard = builder.as_markup()
    return keyboard


def create_products(products):
    builder = InlineKeyboardBuilder()
    for product in products:
        builder.add(InlineKeyboardButton(text=product, callback_data=f"product_{product}"))
    builder.add(InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä—è–º‚¨Ö", callback_data="return_categories"))
    builder.adjust(1)
    keyboard = builder.as_markup()
    return keyboard


def create_quantity():
    builder = InlineKeyboardBuilder()
    for i in range(10):
        if i != 0:
            builder.add(InlineKeyboardButton(text=str(i), callback_data=f"quantity_{i}"))
    builder.add(InlineKeyboardButton(text="‚úè–í–≤–µ—Å—Ç–∏ —Å–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ", callback_data="personality_quantity"))
    builder.adjust(3)
    keyboard = builder.as_markup()
    return keyboard


def cart_menu():
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚ûï–î–æ–±–∞–≤–∏—Ç—å –µ—â–µ", callback_data="add_more"))
    builder.add(InlineKeyboardButton(text='üõí–ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞', callback_data="show_cart"))
    builder.add(InlineKeyboardButton(text='‚úÖ–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', callback_data="purchase"))
    builder.adjust(1)
    keyboard = builder.as_markup()
    return keyboard


def create_cart_buttons(products):
    buttons = []
    for i, p in enumerate(products):
        buttons.append([
            InlineKeyboardButton(text=f"‚ùå –£–¥–∞–ª–∏—Ç—å {p['name']}", callback_data=f"remove_{i}"),
            InlineKeyboardButton(text="‚úè –ö–æ–ª-–≤–æ", callback_data=f"editqty_{i}")
        ])
    buttons.append([InlineKeyboardButton(text="üóë –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É", callback_data="clear_cart")])
    buttons.append([InlineKeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data="show_cart_summary")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def back_to_cart():
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üõí–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–æ—Ä–∑–∏–Ω—É", callback_data="show_cart"))
    builder.adjust(1)
    keyboard = builder.as_markup()
    return keyboard


def return_to_cart_summary():
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚¨Ö–ù–∞–∑–∞–¥", callback_data="show_cart_summary"))
    keyboard = builder.as_markup()
    return keyboard


def confirm_order_menu():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="confirm_order")],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="show_cart_summary")]
        ]
    )
